{"version":3,"file":"component---src-pages-standards-tsx-316e444c3ea10677cc48.js","mappings":"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","sources":["webpack://sovereigncloudstack.org/./src/pages/standards.tsx","webpack://sovereigncloudstack.org/./src/components/CustomButton.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Grid, Text, useThemeUI } from 'theme-ui';\nimport { graphql } from 'gatsby';\nimport CustomButton from '../components/CustomButton';\nimport Layout from '../components/Layout';\n\nexport default function Home({ data }: any) {\n    const { theme } = useThemeUI();\n    const [showOverlay] = useState<boolean>(false);\n\n    const content = data.markdownRemark.frontmatter;\n\n    useEffect(() => {\n        if (showOverlay) {\n            document.body.classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n        }\n        return () => {\n            document.body.classList.remove('no-scroll');\n        };\n    }, [showOverlay]);\n\n    if (!content || !content.meta || !content.sections) {\n        return <div>Error: Content is missing!</div>; // Optionally, replace this with a loading state\n    }\n\n    return (\n        <Layout\n            pageContext={{\n                frontmatter: {\n                    enableAnimation: content.enableAnimation ?? true, // Default-Wert\n                },\n            }}\n        >\n            <title>{content.title} – </title>\n            <meta name='viewport' content={content.meta.viewport} />\n            <meta name='description' content={content.meta.description} />\n            <meta\n                property='og:description'\n                content={content.meta.og_description}\n            />\n            <meta property='og:url' content={content.meta.og_url} />\n            <meta property='og:site_name' content={content.meta.og_site_name} />\n            <meta property='og:title' content={content.meta.og_title} />\n            <meta property='og:type' content={content.meta.og_type} />\n            <meta property='og:image' content={content.meta.og_image} />\n            <link rel='icon' href='/favicon.png' />\n            {/* Hero Section */}\n            <Box\n                sx={{\n                    maxWidth: '1920px',\n                    m: 'auto',\n                    my: [2, 3, 3, 5],\n                    px: ['20px', '20px', '20px', '40px'],\n                }}\n            >\n                <Grid\n                    columns={[2, 4, 4, 6]}\n                    gap={[4, 20, 20, 40]}\n                    sx={{\n                        gridTemplateRows: ['300px', null, null, '100px'],\n                    }}\n                >\n                    <Box\n                        sx={{\n                            gridColumn: ['1 / -1', null, '1 / 7'],\n                            zIndex: ['-1000', '-1000', '-1000', '-1000'],\n                        }}\n                    >\n                        <Text\n                            variant='heading'\n                            sx={{\n                                fontSize: [6, 7, 7, 8],\n                            }}\n                        >\n                            {content.sections[0].headline1} <br />{' '}\n                            {content.sections[0].headline2}\n                        </Text>\n                    </Box>\n                </Grid>\n                <Grid\n                    columns={[2, 4, 4, 6]}\n                    gap={[4, 20, 20, 40]}\n                    sx={{\n                        gridTemplateRows: ['300px', null, null, '100px'],\n                    }}\n                >\n                    <Box\n                        sx={{\n                            gridColumn: ['1 / -1', null, '1 / 5'],\n                            mt: [0, 4, 4, 5],\n                            background: theme.colors?.boxBackground,\n                            boxShadow: theme.colors?.boxShadow,\n                        }}\n                    >\n                        <Text\n                            variant='body'\n                            sx={{\n                                fontSize: [0, 1, 1, 1],\n                            }}\n                        >\n                            {content.sections[0].text1}\n                        </Text>\n                        {content.sections[0].text1?.button && (\n                            <Box sx={{ my: [1, 2, 3, 4] }}>\n                                <CustomButton\n                                    variant='primary'\n                                    label={\n                                        content.sections[0].text1.button.label\n                                    }\n                                    href={content.sections[0].text1.button.href}\n                                />\n                            </Box>\n                        )}\n                    </Box>\n                </Grid>\n            </Box>\n\n            {/* Second Section */}\n            <Box\n                sx={{\n                    maxWidth: '1920px',\n                    m: 'auto',\n                    pt: [7],\n                    px: ['20px', '20px', '20px', '40px'],\n                }}\n            >\n                <Grid\n                    columns={[1, null, 3]}\n                    gap={[4, 20, 20, 40]}\n                    sx={{\n                        gridColumn: '1 / -1',\n                        gridTemplateRows: [null, null, null, '100px'],\n                        width: '100%',\n                        maxWidth: '1920px',\n                        m: 'auto',\n                    }}\n                >\n                    <Box\n                        sx={{\n                            gridColumn: ['1 / -1', null, '2 / 7'],\n                            zIndex: ['-1000', '-1000', '-1000', '-1000'],\n                            mb: [0, 4, 4, 7],\n                        }}\n                    >\n                        <Text\n                            variant='heading'\n                            sx={{\n                                fontSize: [6, 7, 7, 8],\n                            }}\n                        >\n                            {content.sections[1].headline1}\n                        </Text>\n                    </Box>\n                </Grid>\n                <Grid\n                    columns={[1, null, 3]}\n                    gap={[4, 4, 4, '40px']}\n                    sx={{\n                        gridColumn: '1 / -1', // Span across all columns\n                        gridTemplateRows: [null, null, null, '300px'],\n                        width: '100%', // Full width,\n                        maxWidth: '1920px',\n                        m: 'auto',\n                        pt: [7],\n                    }}\n                >\n                    {content.sections[1].boxes.map(\n                        (box: any, index: number) => (\n                            <Box\n                                key={index}\n                                sx={{\n                                    background: theme.colors?.boxBackground,\n                                    boxShadow: theme.colors?.boxShadow,\n                                    p: 4,\n                                    mb: 4,\n                                }}\n                            >\n                                <Text\n                                    variant='bold'\n                                    sx={{ fontSize: [1, 2, 2, 2] }}\n                                >\n                                    {box.title}\n                                    <br />\n                                </Text>\n                                <Text\n                                    variant='body'\n                                    sx={{ fontSize: [1, 2, 2, 2] }}\n                                >\n                                    {box.text}\n                                </Text>\n                                {box.button && (\n                                    <Box sx={{ my: [1, 2, 3, 4] }}>\n                                        <CustomButton\n                                            variant='primary'\n                                            label={box.button.label}\n                                            href={box.button.href}\n                                        />\n                                    </Box>\n                                )}\n                            </Box>\n                        )\n                    )}\n                </Grid>\n            </Box>\n\n            {/* Third Section */}\n            <Box\n                sx={{\n                    maxWidth: '1920px',\n                    m: 'auto',\n                    pt: [7],\n                    px: ['20px', '20px', '20px', '40px'],\n                }}\n            >\n                <Grid\n                    columns={[1, null, 6]}\n                    gap={[4, 20, 20, 40]}\n                    sx={{\n                        gridColumn: '1 / -1',\n                        width: '100%',\n                        maxWidth: '1920px',\n                        m: 'auto',\n                        gridTemplateRows: '300px',\n                    }}\n                >\n                    <Box\n                        sx={{\n                            gridColumn: ['1 / -1', null, '1 / 7'],\n                            zIndex: ['-1000', '-1000', '-1000', '-1000'],\n                            mt: [5, 4, 4, 7],\n                        }}\n                    >\n                        <Text\n                            variant='heading'\n                            sx={{\n                                fontSize: [6, 7, 7, 8],\n                            }}\n                        >\n                            {content.sections[2].headline1}\n                        </Text>\n                    </Box>\n                </Grid>\n\n                <Box\n                    sx={{\n                        gridColumn: ['1 / -1', null, '5 / 7'],\n                        mt: [0, 4, 4, 6],\n                        mb: [4, 4, 4, 6],\n                        width: '100%',\n                    }}\n                >\n                    <Box\n                        sx={{\n                            background: theme.colors?.boxBackground,\n                            boxShadow: theme.colors?.boxShadow,\n                        }}\n                    >\n                        <Text variant='body' sx={{ fontSize: [0, 1, 1, 2] }}>\n                            {content.sections[2].text}\n                        </Text>\n                    </Box>\n                </Box>\n            </Box>\n        </Layout>\n    );\n}\nexport const query = graphql`\n    query HomePageQuery($language: String!) {\n        markdownRemark(\n            frontmatter: {\n                language: { eq: $language }\n                template: { eq: \"standardsPage\" }\n            }\n        ) {\n            frontmatter {\n                title\n                enableAnimation\n                meta {\n                    viewport\n                    description\n                    og_description\n                    og_url\n                    og_site_name\n                    og_title\n                    og_type\n                    og_image\n                }\n                sections {\n                    headline1\n                    headline2\n                    text1\n                    text\n                    button {\n                        href\n                        label\n                    }\n                    boxes {\n                        title\n                        text\n                    }\n                    personas {\n                        title\n                        text\n                    }\n                }\n            }\n        }\n    }\n`;\n","import React from 'react';\nimport { Box, Text, useThemeUI } from 'theme-ui';\n\ninterface ButtonProps {\n    href?: string;\n    label: string;\n    onClick?: (e: any) => void;\n    variant: string;\n}\n\nconst CustomButton: React.FC<ButtonProps> = (props: ButtonProps) => {\n    const { href, label, variant } = props;\n    const { theme } = useThemeUI();\n    return (\n        <a\n            style={{\n                textDecoration: 'none',\n                color: theme.colors?.background as string,\n            }}\n            href={href}\n            // target='_blank'\n            // rel='noopener noreferrer'\n        >\n            <Box\n                sx={{\n                    variant: 'buttons.' + variant,\n                }}\n            >\n                <Text sx={{ fontSize: [0, 1, 2, 2] }}>{label}</Text>\n            </Box>\n        </a>\n    );\n};\n\nexport default CustomButton;\n"],"names":["Home","_ref","_content$enableAnimat","_theme$colors","_theme$colors2","_content$sections$0$t","_theme$colors5","_theme$colors6","data","theme","useThemeUI","showOverlay","useState","content","markdownRemark","frontmatter","useEffect","document","body","classList","add","remove","meta","sections","React","Layout","pageContext","enableAnimation","title","name","viewport","description","property","og_description","og_url","og_site_name","og_title","og_type","og_image","rel","href","Box","sx","maxWidth","m","my","px","Grid","columns","gap","gridTemplateRows","gridColumn","zIndex","Text","variant","fontSize","headline1","headline2","mt","background","colors","boxBackground","boxShadow","text1","button","CustomButton","label","pt","width","mb","boxes","map","box","index","_theme$colors3","_theme$colors4","key","p","text","props","style","textDecoration","color"],"sourceRoot":""}