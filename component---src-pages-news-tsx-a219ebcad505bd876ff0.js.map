{"version":3,"file":"component---src-pages-news-tsx-a219ebcad505bd876ff0.js","mappings":"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","sources":["webpack://sovereigncloudstack.org/./src/components/NewsSectionList.tsx","webpack://sovereigncloudstack.org/./src/helpers/formatLocalizedDate.ts","webpack://sovereigncloudstack.org/./src/pages/news.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Grid, Text, NavLink, useThemeUI } from 'theme-ui';\nimport { formatLocalizedDate } from '../helpers/formatLocalizedDate';\n\ninterface NewsSectionListProps {\n    items: Array<{\n        id: string;\n        frontmatter: {\n            title: string;\n            date: string;\n            journal: string;\n            link: string;\n            slug: string;\n            postType: string;\n            authors?: Array<{\n                name: string;\n                image: string;\n            }>;\n        };\n        excerpt: string;\n    }>;\n    headline: string;\n    language: string;\n    moreButtonText: string;\n    loadMoreItemsButtonText: string;\n    initialVisibleItems?: number;\n}\n\nconst NewsSectionList: React.FC<NewsSectionListProps> = ({\n    items,\n    headline,\n    language,\n    moreButtonText,\n    loadMoreItemsButtonText,\n    initialVisibleItems = 5,\n}) => {\n    const [visibleItems, setVisibleItems] =\n        useState<number>(initialVisibleItems);\n\n    const { theme } = useThemeUI();\n\n    return (\n        <Box\n            sx={{\n                mb: [5, 5, 5, 6],\n            }}\n        >\n            <Box sx={{ mb: [3, 4, 4, 5] }}>\n                <Text\n                    variant='heading'\n                    sx={{\n                        fontSize: [6, 7, 7, 8],\n                    }}\n                >\n                    {headline}\n                </Text>\n            </Box>\n            <Grid\n                columns={[2, 4, 4, 6]}\n                gap={[4, 20, 20, 40]}\n                sx={{\n                    gridTemplateRows: 'auto',\n                }}\n            >\n                {items.slice(0, visibleItems).map((item) => (\n                    <Box\n                        key={item.id}\n                        sx={{\n                            gridColumn: ['1 / -1', null, '2 / 6'],\n                            borderBottom: '2px black solid',\n                            position: 'relative',\n                            minHeight: '100px',\n                            background: theme.colors?.background,\n                        }}\n                    >\n                        <Grid\n                            columns={[2, 4, 4, 6]}\n                            gap={[4, 20, 20, 40]}\n                            sx={{\n                                gridTemplateRows: 'auto',\n                            }}\n                        >\n                            <Box sx={{ gridColumn: ['1 / -1', null, '1 / 2'] }}>\n                                <Text sx={{ fontSize: 0, fontWeight: '900' }}>\n                                    {formatLocalizedDate(\n                                        item.frontmatter.date,\n                                        language\n                                    )}\n                                </Text>\n                                {item.frontmatter.authors &&\n                                    item.frontmatter.authors.map(\n                                        (author, index) => (\n                                            <Box key={index}>\n                                                <Text\n                                                    variant='body'\n                                                    sx={{ fontSize: '12px' }}\n                                                >\n                                                    {author.name}\n                                                </Text>\n                                            </Box>\n                                        )\n                                    )}\n                            </Box>\n\n                            {/* Title and Excerpt */}\n                            <Box sx={{ gridColumn: ['1 / -1', null, '2 / 6'] }}>\n                                <Box sx={{ mb: [2] }}>\n                                    <Text\n                                        variant='heading'\n                                        sx={{ fontSize: 2 }}\n                                    >\n                                        {item.frontmatter.title}\n                                    </Text>\n                                </Box>\n                                <Box\n                                    sx={{\n                                        maxWidth: [\n                                            '350px',\n                                            '400px',\n                                            '400px',\n                                            '100%',\n                                        ],\n                                    }}\n                                >\n                                    <Text sx={{ mt: 3 }}>{item.excerpt}</Text>\n                                </Box>\n                            </Box>\n                        </Grid>\n\n                        {/* \"Mehr\" Button */}\n                        <NavLink\n                            href={item.frontmatter.postType === 'press' ? `${item.frontmatter.link}` : `/${item.frontmatter.postType}/${item.frontmatter.slug}`}\n                            sx={{\n                                display: 'inline-block',\n                                backgroundColor: 'black',\n                                color: 'white',\n                                textDecoration: 'none',\n                                px: 3,\n                                py: 2,\n                                fontSize: 1,\n                                borderRadius: 0,\n                                position: 'absolute',\n                                bottom: 0,\n                                right: 0,\n                                boxShadow: 'none',\n                                '&:hover': {\n                                    backgroundColor: 'secondary',\n                                    color: 'primary',\n                                },\n                            }}\n                        >\n                            {moreButtonText}\n                        </NavLink>\n                    </Box>\n                ))}\n            </Grid>\n\n            {visibleItems < items.length && (\n                <Box\n                    sx={{\n                        textAlign: 'center',\n                        maxWidth: '400px',\n                        m: 'auto',\n                        mt: 4,\n                    }}\n                >\n                    <NavLink\n                        onClick={() => setVisibleItems((prev) => prev + 5)}\n                        sx={{\n                            cursor: 'pointer',\n                            display: 'inline-block',\n                            backgroundColor: 'primary',\n                            color: 'white',\n                            textDecoration: 'none',\n                            px: 3,\n                            py: 2,\n                            fontSize: 1,\n                            borderRadius: 0,\n                            boxShadow: 'none',\n                            '&:hover': {\n                                backgroundColor: 'secondary',\n                                color: 'primary',\n                            },\n                        }}\n                    >\n                        {loadMoreItemsButtonText}\n                    </NavLink>\n                </Box>\n            )}\n        </Box>\n    );\n};\n\nexport default NewsSectionList;\n","export const formatLocalizedDate = (dateString: string, language: string) => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat(language, {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric',\n    }).format(date);\n};\n","import React, { useState, useEffect } from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport { Box } from 'theme-ui';\nimport Footer from '../components/Footer';\nimport MenuOverlay from '../components/MenuOverlay';\nimport TopNavigation from '../components/TopNavigation';\nimport NewsSectionList from '../components/NewsSectionList';\nimport Layout from '../components/Layout';\n\ninterface CustomPageContext {\n    language: string;\n}\n\ninterface NewsPageData {\n    page: {\n        frontmatter: {\n            title: string;\n            enableAnimation?: boolean;\n            description: string;\n            headline_events: string;\n            headline_announcements: string;\n            headline_conferences: string;\n            headline_press: string;\n            more_events_button: string;\n            more_announcements_button: string;\n            more_conferences_button: string;\n            more_press_button: string;\n            more_button: string;\n        };\n    };\n    posts: {\n        nodes: Array<{\n            id: string;\n            frontmatter: {\n                title: string;\n                date: string;\n                journal: string;\n                conference: string;\n                link: string;\n                video: string;\n                postType: string;\n                slug: string;\n                authors?: Array<{\n                    name: string;\n                    image: string;\n                }>;\n            };\n            excerpt: string;\n        }>;\n    };\n}\n\nconst NewsPage: React.FC<PageProps<NewsPageData, CustomPageContext>> = ({\n    data,\n    pageContext,\n}) => {\n    const { language } = pageContext;\n    const { page, posts } = data;\n    const [showOverlay] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (showOverlay) {\n            document.body.classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n        }\n        return () => {\n            document.body.classList.remove('no-scroll');\n        };\n    }, [showOverlay]);\n\n\n    function slug_or_link(slug, link) {\n\tif (slug) {\n\t\treturn slug;\n\t} else {\n\t\treturn link;\n\t}\n    };\n    // Filter posts by type\n    const events = posts.nodes.filter(\n        (post) => post.frontmatter.postType === 'event'\n    );\n    const announcements = posts.nodes.filter(\n        (post) => post.frontmatter.postType === 'announcements'\n    );\n    const blog = posts.nodes.filter(\n        (post) => post.frontmatter.postType === 'blog'\n    );\n    const conferences = posts.nodes.filter(\n        (post) => post.frontmatter.postType === 'conferences'\n    );\n    const press = posts.nodes.filter(\n        (post) => post.frontmatter.postType === 'press'\n    );\n\n    return (\n        <Layout\n            pageContext={{\n                frontmatter: {\n                    enableAnimation: page.frontmatter.enableAnimation ?? true, // Default-Wert\n                },\n            }}\n        >            <title>{page.frontmatter.title} – Sovereign Cloud Stack</title>\n            <meta name='description' content={page.frontmatter.description} />\n            <Box\n                sx={{\n                    maxWidth: '1920px',\n                    m: 'auto',\n                    px: ['20px', '20px', '20px', '40px'],\n                }}\n            >\n                <NewsSectionList\n                    items={announcements}\n                    headline={page.frontmatter.headline_announcements}\n                    language={language}\n                    moreButtonText={page.frontmatter.more_button}\n                    loadMoreItemsButtonText={\n                        page.frontmatter.more_announcements_button\n                    }\n                />\n                {/* <NewsSectionList\n                    items={events}\n                    headline={page.frontmatter.headline_events}\n                    language={language}\n                    moreButtonText={page.frontmatter.more_button}\n                    loadMoreItemsButtonText={\n                        page.frontmatter.more_events_button\n                    }\n                /> */}\n                {/* <NewsSectionList\n                    items={conferences}\n                    headline={page.frontmatter.headline_conferences}\n                    language={language}\n                    moreButtonText={page.frontmatter.more_button}\n                    loadMoreItemsButtonText={\n                        page.frontmatter.more_conferences_button\n                    }\n                /> */\n                <NewsSectionList\n                    items={press}\n                    headline={page.frontmatter.headline_press}\n                    language={language}\n                    moreButtonText={page.frontmatter.more_button}\n                    loadMoreItemsButtonText={page.frontmatter.more_press_button}\n                /> }\n            </Box>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query NewsPageQuery($language: String!) {\n        page: markdownRemark(\n            frontmatter: {\n                language: { eq: $language }\n                template: { eq: \"newsPage\" }\n            }\n        ) {\n            frontmatter {\n                title\n                enableAnimation\n                description\n                headline_events\n                headline_announcements\n                headline_conferences\n                headline_press\n                more_button\n                more_announcements_button\n                more_events_button\n                more_conferences_button\n                more_press_button\n            }\n        }\n        posts: allMarkdownRemark(\n            filter: {\n                frontmatter: {\n                    language: { eq: $language }\n                    postType: {\n                        in: [\"announcements\", \"event\", \"conferences\", \"press\"]\n                    }\n                }\n            }\n            sort: { frontmatter: { date: DESC } }\n        ) {\n            nodes {\n                id\n                frontmatter {\n                    title\n                    date(formatString: \"MMMM DD, YYYY\")\n                    journal\n                    link\n                    language\n\t\t    link\n\t\t    slug\n                    postType\n\t\t    journal\n\t\t    authors {\n                       \tname\n            \t           image {\n                            childImageSharp {\n                       \t        gatsbyImageData(layout: CONSTRAINED)\n                           }\n                       \t}\n\t\t    }\n                    featuredImage {\n                        childImageSharp {\n                            gatsbyImageData(layout: CONSTRAINED)\n                        }\n                    }\n                }\n                excerpt(pruneLength: 150) # Automatically generate an excerpt\n            }\n        }\n    }\n`;\n\nexport default NewsPage;\n"],"names":["_ref","items","headline","language","moreButtonText","loadMoreItemsButtonText","initialVisibleItems","visibleItems","setVisibleItems","useState","theme","useThemeUI","React","Box","sx","mb","Text","variant","fontSize","Grid","columns","gap","gridTemplateRows","slice","map","item","_theme$colors","key","id","gridColumn","borderBottom","position","minHeight","background","colors","fontWeight","formatLocalizedDate","dateString","date","Date","Intl","DateTimeFormat","day","month","year","format","frontmatter","authors","author","index","name","title","maxWidth","mt","excerpt","NavLink","href","postType","link","slug","display","backgroundColor","color","textDecoration","px","py","borderRadius","bottom","right","boxShadow","length","textAlign","m","onClick","prev","cursor","_page$frontmatter$ena","data","pageContext","page","posts","showOverlay","useEffect","document","body","classList","add","remove","nodes","filter","post","announcements","press","Layout","enableAnimation","content","description","NewsSectionList","headline_announcements","more_button","more_announcements_button","headline_press","more_press_button"],"sourceRoot":""}